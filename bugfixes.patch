diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/bugfixes.txt nethack-3.4.3-bugfix/bugfixes.txt
--- nethack-3.4.3/bugfixes.txt	1969-12-31 19:00:00.000000000 -0500
+++ nethack-3.4.3-bugfix/bugfixes.txt	2013-04-07 14:34:41.733325206 -0400
@@ -0,0 +1,98 @@
+List of bugs fixed in this repository:
+
+* C343-248:  You can't put candles in a candelabrum while underwater.
+             Author:  Sgeo
+             Source:  http://bilious.alt.org/?257
+
+* C343-324:  Cutting a long worm in two will crash the game if the cut takes
+             the worm to 1 HP or if long worms had become extinct.
+             Author:  Patric Mueller
+             Source:  http://bilious.alt.org/?332
+
+* C343-19:   Dipping acid in a fountain may not destroy the acid. 
+* C343-179:  If a monster is killed by a drawbridge while carrying a potion of
+             acid, the game may panic.
+* C343-268:  Used up potion of acid may end up in bones file.
+             Author:  Patric Mueller
+             Source:  http://bilious.alt.org/?340
+
+* C343-100:  Game may crash if thrown potion hits bars before a monster.
+             Author:  Patric Mueller
+             Source:  http://bilious.alt.org/?341
+
+* C343-218:  Applying a wielded cream pie can crash the game. This generalizes
+             to wielded objects being destroyed.
+* C343-275:  If a lit, wielded, candle or potion of oil burns out, the game may
+             crash.
+* C343-276:  If a figurine auto-transforms while wielded or worn, the game may
+             crash.
+             Author:  Patric Mueller
+             Source:  http://bilious.alt.org/?342
+
+* C343-162:  Using Magicbane may cause an ungrammatical message.
+             Author:  Ray Chason
+             Source:  Uploaded to Bilious, but not public as of this writing.
+
+* C343-1:    At a pit the game can give messages with poor grammar.
+             Author:  Tung Nguyen
+             Source:  https://github.com/tung/NitroHack/commit/5d40e9f86486141df827e2afef78e992c4aac01b
+
+* C343-175:  Chatting to hostile prisoners may give an inappropriate message.
+             Author:  Bulwersator
+             Source:  https://github.com/Bulwersator/UnNetHackPlus/commit/541d0b417bb81df10b4486b895ca78f5bb938247
+             Comment:  Actually tame prisoners give the inappropriate message.
+
+* C343-299:  Killing tame engulfer from inside gives a warning message.
+             Author:  Jared Minch
+             Source:  https://github.com/sgrunt/GruntHack/commit/3df702230a3f767a4c7dd6f98d0156ed621a49ac
+
+* C343-72:   You get confusing messages when you stop levitating while on a
+             flying steed.
+             Author:  Edoardo Spadolini
+             Source:  http://sourceforge.net/apps/trac/unnethack/changeset/958
+
+* C343-171:  Silver weapon damage message is sometimes missing when hero is
+             polymorphed.
+             Author:  Patric Mueller
+             Source:  http://sourceforge.net/apps/trac/unnethack/changeset/910
+
+* C343-174:  Drum of earthquake gives inappropriate message if hero 
+             or monster is in a pit.
+             Author:  Patric Mueller
+             Source:  http://sourceforge.net/apps/trac/unnethack/changeset/948
+
+* C343-30:   Cursed scroll of destroy armor on cursed armor doesn't always
+             interact correctly.
+             Author:  SGrunt
+             Source:  https://github.com/sgrunt/GruntHack/commit/e7afc1b022dd5e1b39dd2c69db077b533e66f3f4
+
+* C343-109:  There is a grammar error in the Tourist leader's greeting.
+             Author:  SGrunt
+             Source:  https://github.com/sgrunt/GruntHack/commit/6da48e6dd87737f1e207a2759e69075d62eb9569
+
+* C343-351:  Alchemy-caused explosions don't wake nearby monsters.
+             Author:  SGrunt
+             Source:  https://github.com/sgrunt/GruntHack/commit/63dbb6485ccc8df690cdbd8eb2cec4d0f30139e4
+             Comment: The original patch makes two additional changes to
+                      features present in GruntHack but not in vanilla.
+
+* SC343-11:  It's possible to easily find the identity of a high priest on the
+             Astral plane.
+* SC343-12:  Hero using telepathy can abuse Call on the Astral Plane.
+             Author:  Patric Mueller
+             Source:  http://bilious.alt.org/?337
+
+* W343-3:    Under the Polish version of Windows 2000 SP4, screen output with a
+             raster font shows wrong characters for many dungeon features.
+* W343-4:    Keyboard may stop responding after locking or unlocking a door
+             when using altkeyhandler=nhraykey.dll
+             Author:  Ray Chason
+             Source:  http://bilious.alt.org/?313
+
+Rejected patches:
+
+* M343-1:    Release code does not build under Carbon.
+             Reason:  Patch does not apply cleanly; changes to sys/mac/macwin.c
+                      refer to lines that do not exist.
+             Author:  Kevin Hugo
+             Source:  http://www.nethack.org/v343/bugmore/src-diff-mac.txt
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/dat/quest.txt nethack-3.4.3-bugfix/dat/quest.txt
--- nethack-3.4.3/dat/quest.txt	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/dat/quest.txt	2013-04-07 14:27:24.781985382 -0400
@@ -2619,7 +2619,7 @@
 "Did you bring me back any souvenirs?"
 %E
 %Cc Tou 00015
-"Is it really you, %p!  I had given up hope for your return.
+"It is really you, %p!  I had given up hope for your return.
 As you can %x, we are desperately in need of your talents.  Someone must
 defeat %n if our town is become what it once was.
 
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/include/extern.h nethack-3.4.3-bugfix/include/extern.h
--- nethack-3.4.3/include/extern.h	2012-01-19 19:21:43.000000000 -0500
+++ nethack-3.4.3-bugfix/include/extern.h	2013-03-31 22:13:58.751794758 -0400
@@ -1576,6 +1576,7 @@
 E const char *FDECL(a_gname_at, (XCHAR_P x,XCHAR_P y));
 E const char *FDECL(align_gname, (ALIGNTYP_P));
 E const char *FDECL(halu_gname, (ALIGNTYP_P));
+E const char *FDECL(rnd_gname, (int));
 E const char *FDECL(align_gtitle, (ALIGNTYP_P));
 E void FDECL(altar_wrath, (int,int));
 
@@ -2016,7 +2017,7 @@
 E void FDECL(fill_pit, (int,int));
 E int FDECL(float_down, (long, long));
 E int FDECL(fire_damage, (struct obj *,BOOLEAN_P,BOOLEAN_P,XCHAR_P,XCHAR_P));
-E void FDECL(water_damage, (struct obj *,BOOLEAN_P,BOOLEAN_P));
+E boolean FDECL(water_damage, (struct obj *,BOOLEAN_P,BOOLEAN_P));
 E boolean NDECL(drown);
 E void FDECL(drain_en, (int));
 E int NDECL(dountrap);
@@ -2367,7 +2368,7 @@
 E void FDECL(hit, (const char *,struct monst *,const char *));
 E void FDECL(miss, (const char *,struct monst *));
 E struct monst *FDECL(bhit, (int,int,int,int,int (*)(MONST_P,OBJ_P),
-			     int (*)(OBJ_P,OBJ_P),struct obj *));
+			     int (*)(OBJ_P,OBJ_P),struct obj *, boolean *));
 E struct monst *FDECL(boomhit, (int,int));
 E int FDECL(burn_floor_paper, (int,int,BOOLEAN_P,BOOLEAN_P));
 E void FDECL(buzz, (int,int,XCHAR_P,XCHAR_P,int,int));
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/README nethack-3.4.3-bugfix/README
--- nethack-3.4.3/README	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/README	2013-03-31 21:01:18.387440642 -0400
@@ -1,3 +1,19 @@
+This repository consists of the original vanilla NetHack 3.4.3 sources, plus
+fixes for bugs discovered and reported by the community -- primarily on
+NetHackWiki (http://nethackwiki.com/), on Bilious (http://bilious.alt.org/) and
+on rec.games.roguelike.nethack.  The aim is to provide "one stop shopping" for
+fixes for known bugs; Bilious, SourceForge, GitHub and the like are the places
+for new features.
+
+Priority is given to bugs listed by the DevTeam.
+
+The file "bugfixes.patch" contains the diff between the unmodified sources and
+this repository.  The file "bugfixes.txt" contains the list of bugs fixed.
+
+The original NetHack README follows:
+
+==============================================================================
+
                 NetHack 3.4.3 -- General information
 
 NetHack 3.4 is an enhancement to the dungeon exploration game NetHack.
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/src/apply.c nethack-3.4.3-bugfix/src/apply.c
--- nethack-3.4.3/src/apply.c	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/src/apply.c	2013-03-31 21:51:15.948582942 -0400
@@ -80,7 +80,7 @@
 	} else if ((mtmp = bhit(u.dx, u.dy, COLNO, FLASHED_LIGHT,
 				(int FDECL((*),(MONST_P,OBJ_P)))0,
 				(int FDECL((*),(OBJ_P,OBJ_P)))0,
-				obj)) != 0) {
+				obj, NULL)) != 0) {
 		obj->ox = u.ux,  obj->oy = u.uy;
 		(void) flash_hits_mon(mtmp, obj);
 	}
@@ -670,7 +670,7 @@
 	mtmp = bhit(u.dx, u.dy, COLNO, INVIS_BEAM,
 		    (int FDECL((*),(MONST_P,OBJ_P)))0,
 		    (int FDECL((*),(OBJ_P,OBJ_P)))0,
-		    obj);
+		    obj, NULL);
 	if (!mtmp || !haseyes(mtmp->data))
 		return 1;
 
@@ -922,13 +922,13 @@
 		You(no_elbow_room);
 		return;
 	}
-	if(Underwater) {
-		pline("Sorry, fire and water don't mix.");
-		return;
-	}
 
 	otmp = carrying(CANDELABRUM_OF_INVOCATION);
 	if(!otmp || otmp->spe == 7) {
+		if(Underwater) {
+		    pline("Sorry, fire and water don't mix.");
+		    return;
+		}
 		use_lamp(obj);
 		return;
 	}
@@ -938,6 +938,10 @@
 		safe_qbuf(qbuf, sizeof(" to ?"), the(xname(otmp)),
 			the(simple_typename(otmp->otyp)), "it"));
 	if(yn(qbuf) == 'n') {
+		if(Underwater) {
+		    pline("Sorry, fire and water don't mix.");
+		    return;
+		}
 		if (!obj->lamplit)
 		    You("try to light %s...", the(xname(obj)));
 		use_lamp(obj);
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/src/artifact.c nethack-3.4.3-bugfix/src/artifact.c
--- nethack-3.4.3/src/artifact.c	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/src/artifact.c	2013-03-31 22:55:38.349180887 -0400
@@ -905,7 +905,7 @@
     if (youattack || youdefend || vis) {
 	(void) upstart(hittee);	/* capitalize */
 	if (resisted) {
-	    pline("%s %s!", hittee, vtense(hittee, "resist"));
+	    pline("%s resist%s!", hittee, youdefend ? "" : "s");
 	    shieldeff(youdefend ? u.ux : mdef->mx,
 		      youdefend ? u.uy : mdef->my);
 	}
@@ -916,7 +916,7 @@
 	    if (do_stun) Strcat(buf, "stunned");
 	    if (do_stun && do_confuse) Strcat(buf, " and ");
 	    if (do_confuse) Strcat(buf, "confused");
-	    pline("%s %s %s%c", hittee, vtense(hittee, "are"),
+	    pline("%s %s %s%c", hittee, youdefend ? "are" : "is",
 		  buf, (do_stun && do_confuse) ? '!' : '.');
 	}
     }
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/src/do.c nethack-3.4.3-bugfix/src/do.c
--- nethack-3.4.3/src/do.c	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/src/do.c	2013-04-02 00:33:09.860525748 -0400
@@ -208,15 +208,14 @@
 		    map_background(x, y, 0);
 		    newsym(x, y);
 		}
-		water_damage(obj, FALSE, FALSE);
+		return water_damage(obj, FALSE, FALSE);
 	} else if (u.ux == x && u.uy == y &&
 		(!u.utrap || u.utraptype != TT_PIT) &&
 		(t = t_at(x,y)) != 0 && t->tseen &&
 			(t->ttyp==PIT || t->ttyp==SPIKED_PIT)) {
 		/* you escaped a pit and are standing on the precipice */
 		if (Blind && flags.soundok)
-			You_hear("%s %s downwards.",
-				The(xname(obj)), otense(obj, "tumble"));
+			You_hear("%s tumble downwards.", the(xname(obj)));
 		else
 			pline("%s %s into %s pit.",
 				The(xname(obj)), otense(obj, "tumble"),
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/src/dokick.c nethack-3.4.3-bugfix/src/dokick.c
--- nethack-3.4.3/src/dokick.c	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/src/dokick.c	2013-03-31 21:51:15.948582942 -0400
@@ -553,7 +553,7 @@
 	mon = bhit(u.dx, u.dy, range, KICKED_WEAPON,
 		   (int FDECL((*),(MONST_P,OBJ_P)))0,
 		   (int FDECL((*),(OBJ_P,OBJ_P)))0,
-		   kickobj);
+		   kickobj, NULL);
 
 	if(mon) {
 	    if (mon->isshk &&
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/src/dothrow.c nethack-3.4.3-bugfix/src/dothrow.c
--- nethack-3.4.3/src/dothrow.c	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/src/dothrow.c	2013-03-31 21:51:15.952582853 -0400
@@ -980,14 +980,17 @@
 
 		if (Underwater) range = 1;
 
+		boolean obj_destroyed = FALSE;
 		mon = bhit(u.dx, u.dy, range, THROWN_WEAPON,
 			   (int FDECL((*),(MONST_P,OBJ_P)))0,
 			   (int FDECL((*),(OBJ_P,OBJ_P)))0,
-			   obj);
+			   obj, &obj_destroyed);
 
 		/* have to do this after bhit() so u.ux & u.uy are correct */
 		if(Is_airlevel(&u.uz) || Levitation)
 		    hurtle(-u.dx, -u.dy, urange, TRUE);
+
+		if (obj_destroyed) return; /* fixes C343-100 */
 	}
 
 	if (mon) {
@@ -1748,7 +1751,7 @@
 			mon = bhit(u.dx, u.dy, range, THROWN_WEAPON,
 				   (int FDECL((*),(MONST_P,OBJ_P)))0,
 				   (int FDECL((*),(OBJ_P,OBJ_P)))0,
-				   obj);
+				   obj, NULL);
 			if(mon) {
 			    if (ghitm(mon, obj))	/* was it caught? */
 				return 1;
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/src/mhitu.c nethack-3.4.3-bugfix/src/mhitu.c
--- nethack-3.4.3/src/mhitu.c	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/src/mhitu.c	2013-04-07 13:55:23.548970930 -0400
@@ -943,6 +943,10 @@
 				goto do_stone;
 			}
 			dmg += dmgval(otmp, &youmonst);
+			if (objects[otmp->otyp].oc_material == SILVER && 
+			       hates_silver(youmonst.data)) { 
+			    pline("The silver sears your flesh!"); 
+			}
 			if (dmg <= 0) dmg = 1;
 			if (!(otmp->oartifact &&
 				artifact_hit(mtmp, &youmonst, otmp, &dmg,dieroll)))
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/src/monmove.c nethack-3.4.3-bugfix/src/monmove.c
--- nethack-3.4.3/src/monmove.c	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/src/monmove.c	2013-04-07 13:17:00.537969508 -0400
@@ -212,6 +212,8 @@
 boolean first;
 boolean fleemsg;
 {
+	if (DEADMONSTER(mtmp)) return;
+
 	if (u.ustuck == mtmp) {
 	    if (u.uswallow)
 		expels(mtmp, mtmp->data, TRUE);
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/src/music.c nethack-3.4.3-bugfix/src/music.c
--- nethack-3.4.3/src/music.c	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/src/music.c	2013-04-07 14:18:04.857419811 -0400
@@ -316,7 +316,7 @@
 				    xkilled(mtmp,0);
 				}
 			}
-		    } else if (x == u.ux && y == u.uy) {
+		    } else if (!u.utrap && x == u.ux && y == u.uy) { 
 			    if (Levitation || Flying ||
 						is_clinger(youmonst.data)) {
 				    pline("A chasm opens up under you!");
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/src/potion.c nethack-3.4.3-bugfix/src/potion.c
--- nethack-3.4.3/src/potion.c	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/src/potion.c	2013-04-07 14:33:07.187207022 -0400
@@ -1438,6 +1438,7 @@
 		if (obj->otyp == POT_ACID) {
 			pline("It boils vigorously!");
 			You("are caught in the explosion!");
+			wake_nearby();
 			losehp(rnd(10), "elementary chemistry", KILLED_BY);
 			makeknown(obj->otyp);
 			update_inventory();
@@ -1668,6 +1669,7 @@
 		/* KMH, balance patch -- acid is particularly unstable */
 		if (obj->cursed || obj->otyp == POT_ACID || !rn2(10)) {
 			pline("BOOM!  They explode!");
+			wake_nearby();
 			exercise(A_STR, FALSE);
 			if (!breathless(youmonst.data) || haseyes(youmonst.data))
 				potionbreathe(obj);
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/src/pray.c nethack-3.4.3-bugfix/src/pray.c
--- nethack-3.4.3/src/pray.c	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/src/pray.c	2013-03-31 22:13:58.751794758 -0400
@@ -1788,12 +1788,21 @@
 halu_gname(alignment)
 aligntyp alignment;
 {
+    if (!Hallucination) return align_gname(alignment);
+
+    return rnd_gname(ROLE_RANDOM);
+}
+
+/* select a random god based on role if provided */
+const char *
+rnd_gname(role)
+int role;
+{
     const char *gnam;
     int which;
 
-    if (!Hallucination) return align_gname(alignment);
-
-    which = randrole();
+    /* select random role if valid role supplied */
+    which = (validrole(role)) ? role : randrole();
     switch (rn2(3)) {
      case 0:	gnam = roles[which].lgod; break;
      case 1:	gnam = roles[which].ngod; break;
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/src/priest.c nethack-3.4.3-bugfix/src/priest.c
--- nethack-3.4.3/src/priest.c	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/src/priest.c	2013-03-31 22:13:58.751794758 -0400
@@ -274,7 +274,14 @@
 				Strcat(pname, "priest ");
 		}
 		Strcat(pname, "of ");
+		/* Astral Call bugfix */
+		if (mon->data == &mons[PM_HIGH_PRIEST] && !Hallucination &&
+		            Is_astralevel(&u.uz) && distu(mon->mx, mon->my) > 2) {
+			Strcat(pname, rnd_gname(str2role((char*)urole.name.m)));
+			Strcat(pname, "?");
+		} else {
 		Strcat(pname, halu_gname((int)EPRI(mon)->shralign));
+		}
 		return(pname);
 	}
 	/* use emin instead of epri */
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/src/read.c nethack-3.4.3-bugfix/src/read.c
--- nethack-3.4.3/src/read.c	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/src/read.c	2013-04-07 14:24:21.833580936 -0400
@@ -804,7 +804,10 @@
 			known = TRUE;
 		} else {	/* armor and scroll both cursed */
 		    Your("%s %s.", xname(otmp), otense(otmp, "vibrate"));
-		    if (otmp->spe >= -6) otmp->spe--;
+		    if (otmp->spe >= -6) {
+			otmp->spe--;
+			adj_abon(otmp, -1);
+		    }
 		    make_stunned(HStun + rn1(10, 10), TRUE);
 		}
 	    }
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/src/shk.c nethack-3.4.3-bugfix/src/shk.c
--- nethack-3.4.3/src/shk.c	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/src/shk.c	2013-03-31 21:56:19.689916704 -0400
@@ -833,6 +833,12 @@
 #endif
 		}
 	}
+
+	/* fix for C343-218, C343-275 and C343-276 */
+	if (obj == uwep) uwepgone();
+	if (obj == uswapwep) uswapwepgone();
+	if (obj == uquiver) uqwepgone();
+
 	dealloc_obj(obj);
 }
 #endif /* OVLB */
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/src/sounds.c nethack-3.4.3-bugfix/src/sounds.c
--- nethack-3.4.3/src/sounds.c	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/src/sounds.c	2013-04-07 13:02:41.236262972 -0400
@@ -643,6 +643,20 @@
 	case MS_DJINNI:
 	    if (mtmp->mtame) {
 		verbl_msg = "Sorry, I'm all out of wishes.";
+		if (ptr == &mons[PM_PRISONER]) {
+		    const char *honorific;
+		    if (is_neuter(youmonst.data)) {
+			honorific = "creature";
+		    } else if(flags.female) {
+			honorific = "woman";
+		    } else {
+			honorific = "man";
+		    }
+		    Sprintf(verbuf, "I understand you're a %s who knows how to get things.", honorific);
+		    verbl_msg = verbuf;
+		} else {
+		    verbl_msg = "Sorry, I'm all out of wishes.";
+		} 
 	    } else if (mtmp->mpeaceful) {
 		if (ptr == &mons[PM_WATER_DEMON])
 		    pline_msg = "gurgles.";
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/src/trap.c nethack-3.4.3-bugfix/src/trap.c
--- nethack-3.4.3/src/trap.c	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/src/trap.c	2013-04-07 13:50:27.870640374 -0400
@@ -2313,7 +2313,8 @@
 	ELevitation &= ~emask;
 	if(Levitation) return(0); /* maybe another ring/potion/boots */
 	if(u.uswallow) {
-	    You("float down, but you are still %s.",
+	    You((Flying) ? "feel less buoyant, but you are still %s.": 
+			   "float down, but you are still %s.", 
 		is_animal(u.ustuck->data) ? "swallowed" : "engulfed");
 	    return(1);
 	}
@@ -2360,9 +2361,10 @@
 	}
 	if (!trap) {
 	    trap = t_at(u.ux,u.uy);
-	    if(Is_airlevel(&u.uz))
-		You("begin to tumble in place.");
-	    else if (Is_waterlevel(&u.uz) && !no_msg)
+	    if(Is_airlevel(&u.uz)) {
+		if (Flying) You("feel less buoyant."); 
+		else You("begin to tumble in place."); 
+	    } else if (Is_waterlevel(&u.uz) && !no_msg)
 		You_feel("heavier.");
 	    /* u.uinwater msgs already in spoteffects()/drown() */
 	    else if (!u.uinwater && !no_msg) {
@@ -2377,10 +2379,11 @@
 			      "splashed down" : sokoban_trap ? "crashed" :
 			      "hit the ground");
 		    else {
-			if (!sokoban_trap)
-			    You("float gently to the %s.",
-				surface(u.ux, u.uy));
-			else {
+			if (!sokoban_trap) {
+			    if (Flying) You("feel less buoyant."); 
+			    else You("float gently to the %s.", 
+				    surface(u.ux, u.uy));
+			} else {
 			    /* Justification elsewhere for Sokoban traps
 			     * is based on air currents. This is
 			     * consistent with that.
@@ -2678,12 +2681,15 @@
     return retval;
 }
 
-void
+/* returns TRUE if obj is destroyed */
+boolean
 water_damage(obj, force, here)
 register struct obj *obj;
 register boolean force, here;
 {
 	struct obj *otmp;
+	struct obj *obj_original = obj;
+	boolean obj_destroyed = FALSE;
 
 	/* Scrolls, spellbooks, potions, weapons and
 	   pieces of armor may get affected by the water */
@@ -2724,6 +2730,7 @@
 				/* damage player/monster? */
 				pline("A potion explodes!");
 				delobj(obj);
+				obj_destroyed = (obj == obj_original);
 				continue;
 			} else if (obj->odiluted) {
 				obj->otyp = POT_WATER;
@@ -2740,7 +2747,9 @@
 			   (uarmc->cursed && !rn2(3)))
 				obj->oeroded++;
 		}
+		obj_destroyed = FALSE;
 	}
+	return obj_destroyed;
 }
 
 /*
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/src/worm.c nethack-3.4.3-bugfix/src/worm.c
--- nethack-3.4.3/src/worm.c	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/src/worm.c	2013-03-31 21:35:39.988686294 -0400
@@ -303,6 +303,23 @@
 	    (void) mattacku(worm);
 }
 
+/*  cutoff()
+ *
+ *  Remove the tail of a worm and adjust the hp of the worm.
+ */
+void
+cutoff(worm, tail)
+    struct monst *worm;
+    struct wseg *tail;
+{
+	if (flags.mon_moving)
+	    pline("Part of the tail of %s is cut off.", mon_nam(worm));
+	else
+	    You("cut part of the tail off of %s.", mon_nam(worm));
+	toss_wsegs(tail, TRUE);
+	if (worm->mhp > 1) worm->mhp /= 2;
+}
+
 /*  cutworm()
  *
  *  Check for mon->wormno before calling this function!
@@ -368,17 +385,15 @@
 
     /* Sometimes the tail end dies. */
     if (rn2(3) || !(new_wnum = get_wormno())) {
-	if (flags.mon_moving)
-	    pline("Part of the tail of %s is cut off.", mon_nam(worm));
-	else
-	    You("cut part of the tail off of %s.", mon_nam(worm));
-	toss_wsegs(new_tail, TRUE);
-	if (worm->mhp > 1) worm->mhp /= 2;
+	cutoff(worm, new_tail);
 	return;
     }
 
     remove_monster(x, y);		/* clone_mon puts new head here */
-    new_worm = clone_mon(worm, x, y);
+    if (!(new_worm = clone_mon(worm, x, y))) {
+	cutoff(worm, new_tail);
+	return;
+    }
     new_worm->wormno = new_wnum;	/* affix new worm number */
 
     /* Devalue the monster level of both halves of the worm. */
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/src/zap.c nethack-3.4.3-bugfix/src/zap.c
--- nethack-3.4.3/src/zap.c	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/src/zap.c	2013-03-31 21:51:15.952582853 -0400
@@ -2467,7 +2467,7 @@
 	    } else if (u.dz) {
 		disclose = zap_updown(obj);
 	    } else {
-		(void) bhit(u.dx,u.dy, rn1(8,6),ZAPPED_WAND, bhitm,bhito, obj);
+		(void) bhit(u.dx,u.dy, rn1(8,6),ZAPPED_WAND, bhitm,bhito, obj, NULL);
 	    }
 	    /* give a clue if obj_zapped */
 	    if (obj_zapped)
@@ -2615,16 +2615,18 @@
  *  one is revealed for a weapon, but if not a weapon is left up to fhitm().
  */
 struct monst *
-bhit(ddx,ddy,range,weapon,fhitm,fhito,obj)
+bhit(ddx,ddy,range,weapon,fhitm,fhito,obj,obj_destroyed)
 register int ddx,ddy,range;		/* direction and range */
 int weapon;				/* see values in hack.h */
 int FDECL((*fhitm), (MONST_P, OBJ_P)),	/* fns called when mon/obj hit */
     FDECL((*fhito), (OBJ_P, OBJ_P));
 struct obj *obj;			/* object tossed/used */
+boolean *obj_destroyed;			/* has object been deallocated? Pointer to boolean, may be NULL */
 {
 	struct monst *mtmp;
 	uchar typ;
 	boolean shopdoor = FALSE, point_blank = TRUE;
+	if (obj_destroyed) { *obj_destroyed = FALSE; }
 
 	if (weapon == KICKED_WEAPON) {
 	    /* object starts one square in front of player */
@@ -2668,6 +2670,7 @@
 		    hits_bars(&obj, x - ddx, y - ddy,
 			      point_blank ? 0 : !rn2(5), 1)) {
 		/* caveat: obj might now be null... */
+		if (obj == NULL && obj_destroyed) { *obj_destroyed = TRUE; }
 		bhitpos.x -= ddx;
 		bhitpos.y -= ddy;
 		break;
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/sys/winnt/nhraykey.c nethack-3.4.3-bugfix/sys/winnt/nhraykey.c
--- nethack-3.4.3/sys/winnt/nhraykey.c	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/sys/winnt/nhraykey.c	2013-03-31 22:47:56.570542233 -0400
@@ -538,17 +538,23 @@
 			shiftstate = ir->Event.KeyEvent.dwControlKeyState;
 			vk = ir->Event.KeyEvent.wVirtualKeyCode;
 			keycode = MapVirtualKey(vk, 2);
-			if (is_altseq(shiftstate)) {
-				if  (ch || inmap(keycode,vk)) altseq = 1;
-				else altseq = -1;	/* invalid altseq */
-			}
-			if (ch || iskeypad(scan) || altseq) {
-				done = 1;	    /* Stop looking         */
-				retval = 1;         /* Found what we sought */
-			} else {
-				/* Strange Key event; let's purge it to avoid trouble */
+			if (scan == 0 && vk == 0) {
+				/* It's the bogus_key.  Discard it */
 				ReadConsoleInput(hConIn,ir,1,&count);
 			}
+			else {
+				if (is_altseq(shiftstate)) {
+					if  (ch || inmap(keycode,vk)) altseq = 1;
+					else altseq = -1;	/* invalid altseq */
+				}
+				if (ch || iskeypad(scan) || altseq) {
+					done = 1;	    /* Stop looking         */
+					retval = 1;         /* Found what we sought */
+				} else {
+					/* Strange Key event; let's purge it to avoid trouble */
+					ReadConsoleInput(hConIn,ir,1,&count);
+				}
+			}
 
 		}
 		else if ((ir->EventType == MOUSE_EVENT &&
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/sys/winnt/nttty.c nethack-3.4.3-bugfix/sys/winnt/nttty.c
--- nethack-3.4.3/sys/winnt/nttty.c	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/sys/winnt/nttty.c	2013-03-31 22:47:56.574542153 -0400
@@ -30,6 +30,7 @@
  * CreateFile
  * GetConsoleScreenBufferInfo
  * GetStdHandle
+ * GetVersion
  * SetConsoleCursorPosition
  * SetConsoleTextAttribute
  * SetConsoleCtrlHandler
@@ -131,6 +132,8 @@
 static DWORD ccount, acount;
 static COORD cursor = {0,0};
 
+static BOOL is_nt;
+
 /*
  * Called after returning from ! or ^Z
  */
@@ -140,6 +143,7 @@
 #ifndef TEXTCOLOR
 	int k;
 #endif
+	is_nt = (GetVersion() & 0x80000000) == 0;
 	erase_char = '\b';
 	kill_char = 21;		/* cntl-U */
 	iflags.cbreak = TRUE;
@@ -429,8 +433,18 @@
 	    default:
 			WriteConsoleOutputAttribute(hConOut,&attr,1,
 							cursor,&acount);
-			WriteConsoleOutputCharacter(hConOut,&ch,1,
-							cursor,&ccount);
+			/* Avoid WriteConsoleOutputCharacterA in NT --
+			   it's broken */
+			if (is_nt) {
+				WCHAR wch[2];
+				MultiByteToWideChar(CP_OEMCP, 0,
+						&ch, 1, wch, 2);
+				WriteConsoleOutputCharacterW(hConOut,wch,1,
+								cursor,&ccount);
+			} else {
+				WriteConsoleOutputCharacterA(hConOut,&ch,1,
+								cursor,&ccount);
+			}
 			cursor.X++;
 	}
 }
@@ -476,7 +490,17 @@
 	cursor.X = ttyDisplay->curx;
 	cursor.Y = ttyDisplay->cury;
 	WriteConsoleOutputAttribute(hConOut,&attr,1,cursor,&acount);
-	WriteConsoleOutputCharacter(hConOut,&ch,1,cursor,&ccount);
+	/* Avoid WriteConsoleOutputCharacterA in NT -- it's broken */
+	if (is_nt) {
+		WCHAR wch[2];
+		MultiByteToWideChar(CP_OEMCP, 0,
+				&ch, 1, wch, 2);
+		WriteConsoleOutputCharacterW(hConOut,wch,1,
+						cursor,&ccount);
+	} else {
+		WriteConsoleOutputCharacterA(hConOut,&ch,1,
+						cursor,&ccount);
+	}
 }
 
 void
