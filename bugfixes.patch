diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/bugfixes.txt nethack-3.4.3-bugfix/bugfixes.txt
--- nethack-3.4.3/bugfixes.txt	1969-12-31 19:00:00.000000000 -0500
+++ nethack-3.4.3-bugfix/bugfixes.txt	2013-03-31 21:43:42.410480421 -0400
@@ -0,0 +1,17 @@
+List of bugs fixed in this repository:
+
+* C343-248:  You can't put candles in a candelabrum while underwater.
+             Author:  Sgeo
+             Source:  http://bilious.alt.org/?257
+
+* C343-324:  Cutting a long worm in two will crash the game if the cut takes
+             the worm to 1 HP or if long worms had become extinct.
+             Author:  Patric Mueller
+             Source:  http://bilious.alt.org/?332
+
+* C343-19:   Dipping acid in a fountain may not destroy the acid. 
+* C343-179:  If a monster is killed by a drawbridge while carrying a potion of
+             acid, the game may panic.
+* C343-268:  Used up potion of acid may end up in bones file.
+             Author:  Patric Mueller
+             Source:  http://bilious.alt.org/?340
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/include/extern.h nethack-3.4.3-bugfix/include/extern.h
--- nethack-3.4.3/include/extern.h	2012-01-19 19:21:43.000000000 -0500
+++ nethack-3.4.3-bugfix/include/extern.h	2013-03-31 21:51:15.948582942 -0400
@@ -2016,7 +2016,7 @@
 E void FDECL(fill_pit, (int,int));
 E int FDECL(float_down, (long, long));
 E int FDECL(fire_damage, (struct obj *,BOOLEAN_P,BOOLEAN_P,XCHAR_P,XCHAR_P));
-E void FDECL(water_damage, (struct obj *,BOOLEAN_P,BOOLEAN_P));
+E boolean FDECL(water_damage, (struct obj *,BOOLEAN_P,BOOLEAN_P));
 E boolean NDECL(drown);
 E void FDECL(drain_en, (int));
 E int NDECL(dountrap);
@@ -2367,7 +2367,7 @@
 E void FDECL(hit, (const char *,struct monst *,const char *));
 E void FDECL(miss, (const char *,struct monst *));
 E struct monst *FDECL(bhit, (int,int,int,int,int (*)(MONST_P,OBJ_P),
-			     int (*)(OBJ_P,OBJ_P),struct obj *));
+			     int (*)(OBJ_P,OBJ_P),struct obj *, boolean *));
 E struct monst *FDECL(boomhit, (int,int));
 E int FDECL(burn_floor_paper, (int,int,BOOLEAN_P,BOOLEAN_P));
 E void FDECL(buzz, (int,int,XCHAR_P,XCHAR_P,int,int));
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/README nethack-3.4.3-bugfix/README
--- nethack-3.4.3/README	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/README	2013-03-31 21:01:18.387440642 -0400
@@ -1,3 +1,19 @@
+This repository consists of the original vanilla NetHack 3.4.3 sources, plus
+fixes for bugs discovered and reported by the community -- primarily on
+NetHackWiki (http://nethackwiki.com/), on Bilious (http://bilious.alt.org/) and
+on rec.games.roguelike.nethack.  The aim is to provide "one stop shopping" for
+fixes for known bugs; Bilious, SourceForge, GitHub and the like are the places
+for new features.
+
+Priority is given to bugs listed by the DevTeam.
+
+The file "bugfixes.patch" contains the diff between the unmodified sources and
+this repository.  The file "bugfixes.txt" contains the list of bugs fixed.
+
+The original NetHack README follows:
+
+==============================================================================
+
                 NetHack 3.4.3 -- General information
 
 NetHack 3.4 is an enhancement to the dungeon exploration game NetHack.
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/src/apply.c nethack-3.4.3-bugfix/src/apply.c
--- nethack-3.4.3/src/apply.c	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/src/apply.c	2013-03-31 21:51:15.948582942 -0400
@@ -80,7 +80,7 @@
 	} else if ((mtmp = bhit(u.dx, u.dy, COLNO, FLASHED_LIGHT,
 				(int FDECL((*),(MONST_P,OBJ_P)))0,
 				(int FDECL((*),(OBJ_P,OBJ_P)))0,
-				obj)) != 0) {
+				obj, NULL)) != 0) {
 		obj->ox = u.ux,  obj->oy = u.uy;
 		(void) flash_hits_mon(mtmp, obj);
 	}
@@ -670,7 +670,7 @@
 	mtmp = bhit(u.dx, u.dy, COLNO, INVIS_BEAM,
 		    (int FDECL((*),(MONST_P,OBJ_P)))0,
 		    (int FDECL((*),(OBJ_P,OBJ_P)))0,
-		    obj);
+		    obj, NULL);
 	if (!mtmp || !haseyes(mtmp->data))
 		return 1;
 
@@ -922,13 +922,13 @@
 		You(no_elbow_room);
 		return;
 	}
-	if(Underwater) {
-		pline("Sorry, fire and water don't mix.");
-		return;
-	}
 
 	otmp = carrying(CANDELABRUM_OF_INVOCATION);
 	if(!otmp || otmp->spe == 7) {
+		if(Underwater) {
+		    pline("Sorry, fire and water don't mix.");
+		    return;
+		}
 		use_lamp(obj);
 		return;
 	}
@@ -938,6 +938,10 @@
 		safe_qbuf(qbuf, sizeof(" to ?"), the(xname(otmp)),
 			the(simple_typename(otmp->otyp)), "it"));
 	if(yn(qbuf) == 'n') {
+		if(Underwater) {
+		    pline("Sorry, fire and water don't mix.");
+		    return;
+		}
 		if (!obj->lamplit)
 		    You("try to light %s...", the(xname(obj)));
 		use_lamp(obj);
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/src/do.c nethack-3.4.3-bugfix/src/do.c
--- nethack-3.4.3/src/do.c	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/src/do.c	2013-03-31 21:42:19.768223685 -0400
@@ -208,7 +208,7 @@
 		    map_background(x, y, 0);
 		    newsym(x, y);
 		}
-		water_damage(obj, FALSE, FALSE);
+		return water_damage(obj, FALSE, FALSE);
 	} else if (u.ux == x && u.uy == y &&
 		(!u.utrap || u.utraptype != TT_PIT) &&
 		(t = t_at(x,y)) != 0 && t->tseen &&
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/src/dokick.c nethack-3.4.3-bugfix/src/dokick.c
--- nethack-3.4.3/src/dokick.c	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/src/dokick.c	2013-03-31 21:51:15.948582942 -0400
@@ -553,7 +553,7 @@
 	mon = bhit(u.dx, u.dy, range, KICKED_WEAPON,
 		   (int FDECL((*),(MONST_P,OBJ_P)))0,
 		   (int FDECL((*),(OBJ_P,OBJ_P)))0,
-		   kickobj);
+		   kickobj, NULL);
 
 	if(mon) {
 	    if (mon->isshk &&
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/src/dothrow.c nethack-3.4.3-bugfix/src/dothrow.c
--- nethack-3.4.3/src/dothrow.c	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/src/dothrow.c	2013-03-31 21:51:15.952582853 -0400
@@ -980,14 +980,17 @@
 
 		if (Underwater) range = 1;
 
+		boolean obj_destroyed = FALSE;
 		mon = bhit(u.dx, u.dy, range, THROWN_WEAPON,
 			   (int FDECL((*),(MONST_P,OBJ_P)))0,
 			   (int FDECL((*),(OBJ_P,OBJ_P)))0,
-			   obj);
+			   obj, &obj_destroyed);
 
 		/* have to do this after bhit() so u.ux & u.uy are correct */
 		if(Is_airlevel(&u.uz) || Levitation)
 		    hurtle(-u.dx, -u.dy, urange, TRUE);
+
+		if (obj_destroyed) return; /* fixes C343-100 */
 	}
 
 	if (mon) {
@@ -1748,7 +1751,7 @@
 			mon = bhit(u.dx, u.dy, range, THROWN_WEAPON,
 				   (int FDECL((*),(MONST_P,OBJ_P)))0,
 				   (int FDECL((*),(OBJ_P,OBJ_P)))0,
-				   obj);
+				   obj, NULL);
 			if(mon) {
 			    if (ghitm(mon, obj))	/* was it caught? */
 				return 1;
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/src/trap.c nethack-3.4.3-bugfix/src/trap.c
--- nethack-3.4.3/src/trap.c	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/src/trap.c	2013-03-31 21:42:19.768223685 -0400
@@ -2678,12 +2678,15 @@
     return retval;
 }
 
-void
+/* returns TRUE if obj is destroyed */
+boolean
 water_damage(obj, force, here)
 register struct obj *obj;
 register boolean force, here;
 {
 	struct obj *otmp;
+	struct obj *obj_original = obj;
+	boolean obj_destroyed = FALSE;
 
 	/* Scrolls, spellbooks, potions, weapons and
 	   pieces of armor may get affected by the water */
@@ -2724,6 +2727,7 @@
 				/* damage player/monster? */
 				pline("A potion explodes!");
 				delobj(obj);
+				obj_destroyed = (obj == obj_original);
 				continue;
 			} else if (obj->odiluted) {
 				obj->otyp = POT_WATER;
@@ -2740,7 +2744,9 @@
 			   (uarmc->cursed && !rn2(3)))
 				obj->oeroded++;
 		}
+		obj_destroyed = FALSE;
 	}
+	return obj_destroyed;
 }
 
 /*
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/src/worm.c nethack-3.4.3-bugfix/src/worm.c
--- nethack-3.4.3/src/worm.c	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/src/worm.c	2013-03-31 21:35:39.988686294 -0400
@@ -303,6 +303,23 @@
 	    (void) mattacku(worm);
 }
 
+/*  cutoff()
+ *
+ *  Remove the tail of a worm and adjust the hp of the worm.
+ */
+void
+cutoff(worm, tail)
+    struct monst *worm;
+    struct wseg *tail;
+{
+	if (flags.mon_moving)
+	    pline("Part of the tail of %s is cut off.", mon_nam(worm));
+	else
+	    You("cut part of the tail off of %s.", mon_nam(worm));
+	toss_wsegs(tail, TRUE);
+	if (worm->mhp > 1) worm->mhp /= 2;
+}
+
 /*  cutworm()
  *
  *  Check for mon->wormno before calling this function!
@@ -368,17 +385,15 @@
 
     /* Sometimes the tail end dies. */
     if (rn2(3) || !(new_wnum = get_wormno())) {
-	if (flags.mon_moving)
-	    pline("Part of the tail of %s is cut off.", mon_nam(worm));
-	else
-	    You("cut part of the tail off of %s.", mon_nam(worm));
-	toss_wsegs(new_tail, TRUE);
-	if (worm->mhp > 1) worm->mhp /= 2;
+	cutoff(worm, new_tail);
 	return;
     }
 
     remove_monster(x, y);		/* clone_mon puts new head here */
-    new_worm = clone_mon(worm, x, y);
+    if (!(new_worm = clone_mon(worm, x, y))) {
+	cutoff(worm, new_tail);
+	return;
+    }
     new_worm->wormno = new_wnum;	/* affix new worm number */
 
     /* Devalue the monster level of both halves of the worm. */
diff -U 3 -Nr '--exclude=.*.sw[a-z]' '--exclude=bugfixes.patch' '--exclude=.git*' nethack-3.4.3/src/zap.c nethack-3.4.3-bugfix/src/zap.c
--- nethack-3.4.3/src/zap.c	2003-12-07 18:39:13.000000000 -0500
+++ nethack-3.4.3-bugfix/src/zap.c	2013-03-31 21:51:15.952582853 -0400
@@ -2467,7 +2467,7 @@
 	    } else if (u.dz) {
 		disclose = zap_updown(obj);
 	    } else {
-		(void) bhit(u.dx,u.dy, rn1(8,6),ZAPPED_WAND, bhitm,bhito, obj);
+		(void) bhit(u.dx,u.dy, rn1(8,6),ZAPPED_WAND, bhitm,bhito, obj, NULL);
 	    }
 	    /* give a clue if obj_zapped */
 	    if (obj_zapped)
@@ -2615,16 +2615,18 @@
  *  one is revealed for a weapon, but if not a weapon is left up to fhitm().
  */
 struct monst *
-bhit(ddx,ddy,range,weapon,fhitm,fhito,obj)
+bhit(ddx,ddy,range,weapon,fhitm,fhito,obj,obj_destroyed)
 register int ddx,ddy,range;		/* direction and range */
 int weapon;				/* see values in hack.h */
 int FDECL((*fhitm), (MONST_P, OBJ_P)),	/* fns called when mon/obj hit */
     FDECL((*fhito), (OBJ_P, OBJ_P));
 struct obj *obj;			/* object tossed/used */
+boolean *obj_destroyed;			/* has object been deallocated? Pointer to boolean, may be NULL */
 {
 	struct monst *mtmp;
 	uchar typ;
 	boolean shopdoor = FALSE, point_blank = TRUE;
+	if (obj_destroyed) { *obj_destroyed = FALSE; }
 
 	if (weapon == KICKED_WEAPON) {
 	    /* object starts one square in front of player */
@@ -2668,6 +2670,7 @@
 		    hits_bars(&obj, x - ddx, y - ddy,
 			      point_blank ? 0 : !rn2(5), 1)) {
 		/* caveat: obj might now be null... */
+		if (obj == NULL && obj_destroyed) { *obj_destroyed = TRUE; }
 		bhitpos.x -= ddx;
 		bhitpos.y -= ddy;
 		break;
